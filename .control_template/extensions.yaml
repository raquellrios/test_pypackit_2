# Meta Content Extensions
# =======================
# Declarations of extended meta contents to be fetched from other GitHub repositories.
# If you do not want to add any extensions, you can delete this file.
#
# The file must contain an array of extension declarations, ordered by priority (highest first).
# Each array element must be an object with the following properties:
#
# Properties
# ----------
# type : string
#    Type of the extension.
# repo : string
#    Full name of the GitHub repository (username/repo-name) to fetch the files from.
# path : string
#    Path to the file in the repository to fetch.
# ref : string, default: most recent commit on the default branch
#    The reference (branch, tag, commit etc.) in the repository to fetch the files from.
#    If not provided, the most recent commit on the default branch will be used.
# append_list : boolean, default: true
#    Whether to append the elements of the lists present in the extended content
#    to the corresponding existing lists present in higher-priority content.
#    If set to `false`, any list that has a corresponding existing list in higher-priority content
#    will be treated as a duplicate (see `raise_duplicate` below).
# append_dict : boolean, default: true
#    Whether to append the key-value pairs of the dictionaries present in the extended content
#    to the corresponding existing dictionaries present in higher-priority content.
#    If set to `false`, any dictionary that has a corresponding existing dictionary
#    in higher-priority content will be treated as a duplicate (see `raise_duplicate` below).
# raise_duplicate : boolean, default: false
#    Whether to raise an exception if a list or dictionary in the extended content
#    has a corresponding existing list or dictionary in higher-priority content.
#    If set to `false`, the list or dictionary in the extended content will be ignored.
#
# Examples
# --------
# - Extend the `issues` meta content from the file `.meta/dev/issues.yaml`
#   located in the repository `RepoDynamics/MetaExtensions` on the `PyPackIT/v1` reference:
#   - type: dev/issues
#     repo: RepoDynamics/MetaExtensions
#     path: .meta/dev/issues.yaml
#     ref: PyPackIT/v1
