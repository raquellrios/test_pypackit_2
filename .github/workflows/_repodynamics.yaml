name: '[Callable]: RepoDynamics'

on:
  workflow_call:
    inputs:
      meta-sync:
        type: string
        default: report
        required: false
        description: |
          The action to take when the dynamic files are out of sync with the repository meta content.
          Selecting 'none' will disable this action.
      hooks:
        type: string
        default: report
        required: false
        description: |
          The action to take when running the workflow hooks.
          Selecting 'none' will disable this action.
      package-build:
        type: boolean
        required: false
        default: false
        description: |
          Build the package and upload the builds as artifacts.
      package-lint:
        type: boolean
        required: false
        default: false
        description: |
          Run the linting workflow.
      package-test:
        type: boolean
        required: false
        default: false
        description: |
          Run the test workflow on package.
      website-build:
        type: boolean
        required: false
        default: false
        description: |
          Build the documentation with Sphinx and upload the builds as artifacts.
    secrets:
      repo-admin-token:
        description: 'Token with admin permissions to the repository.'
        required: false
    outputs:
      config:
        value: ${{ jobs.init.outputs.config }}
        description: 'Configurations for subsequent workflow jobs.'
      metadata:
        value: ${{ jobs.init.outputs.metadata }}
        description: 'Repository ci-metadata.'

jobs:
  init:
    name: 'Init'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    outputs:
      website: ${{ steps.init.outputs.website }}
      lint: ${{ steps.init.outputs.lint }}
      test: ${{ steps.init.outputs.test }}
      build: ${{ steps.init.outputs.build }}
      publish-testpypi: ${{ steps.init.outputs.publish-testpypi }}
      test-testpypi: ${{ steps.init.outputs.test-testpypi }}
      publish-pypi: ${{ steps.init.outputs.publish-pypi }}
      test-pypi: ${{ steps.init.outputs.test-pypi }}
      finalize: ${{ steps.init.outputs.finalize }}

      config: ${{ steps.init.outputs.config }}
      metadata: ${{ steps.init.outputs.metadata-ci }}
    steps:
      - id: init
        uses: repodynamics/init@v1
        with:
          template: PyPackIT
          admin-token: ${{ secrets.repo-admin-token }}
          package-build: ${{ inputs.package-build }}
          package-lint: ${{ inputs.package-lint }}
          package-test: ${{ inputs.package-test }}
          website-build: ${{ inputs.website-build }}
          meta-sync: ${{ inputs.meta-sync }}
          hooks: ${{ inputs.hooks }}

  init-fail:
    name: 'Status'
    runs-on: ubuntu-latest
    needs: init
    steps:
      - run: |
          if [ "${{ fromJSON(needs.init.outputs.fail) }}" = "true" ]; then
            exit 1
          else
            exit 0
          fi
